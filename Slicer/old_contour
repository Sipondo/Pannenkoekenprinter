
# for n, contour in enumerate(contours):
#     plt.plot(contour[:, 1], 256-contour[:, 0], linewidth=5)
#     print(n)
#     #print(n, contour)
# plt.show()
# plt.xlim([0,256])
# plt.ylim([0,256])
# plt.show()
#
# from matplotlib.backends.backend_agg import FigureCanvasAgg as FigureCanvas
# from matplotlib.figure import Figure
#
#
# #fig = Figure(figsize=(1.3+256.0/72.0,1.3+256.0/72.0))
# fig = Figure(figsize=(256.0/72.0,256.0/72.0), frameon=False)
# canvas = FigureCanvas(fig)
# ax = fig.gca() #fig.add_axes([0, 0, 256, 256])
# ax.axes.set_xlim(0,256)
# ax.axes.set_ylim(0,256)
#
# #ax.text(0.0,0.0,"Test", fontsize=45)
# #ax.plot()
# for n, contour in enumerate(contours):
#     ax.plot(contour[:, 1], 256-contour[:, 0], linewidth=5)
#
# #fig.patch.set_visible(False)
# ax.patch.set_visible(False)
# ax.axis('off')
# ax.spines['top'].set_visible(False)
# ax.spines['right'].set_visible(False)
# ax.spines['bottom'].set_visible(False)
# ax.spines['left'].set_visible(False)
# canvas.draw()       # draw the canvas, cache the renderer
#
#
#
# width, height = fig.get_size_inches() * fig.get_dpi()
#
# image = np.fromstring(canvas.tostring_rgb(), dtype='uint8').reshape(int(height), int(width), 3)
#
#
# #image = np.fromstring(canvas.tostring_rgb(), dtype='uint8').reshape(height, width, 3)
#
# # (373248/3)**.5
# # 373248/610
# # 610*610
# offset = int((image.shape[0]-256)/2)
#
#
# # image = image[:372100].reshape((610,610))
# plt.imshow(seg_bot[0])
# #plt.imshow(image[offset:-offset,offset:-offset], alpha=0.6)
# plt.imshow(image, alpha=0.6)
# plt.show()
